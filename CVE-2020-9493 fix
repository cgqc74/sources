# Detecta versiones instaladas de .NET Framework y .NET Core/5+/6+/7+ en Windows
# Compara con una lista de versiones mínimas recomendadas (puedes ampliar la lista)

Write-Host "Detectando versiones de .NET instaladas en el sistema..." -ForegroundColor Cyan

# Versiones mínimas seguras (puedes actualizar según boletines MS)
$minFrameworkVersion = [Version]"4.8.1"
$minNetCoreVersions = @{
    "3.1" = [Version]"3.1.32"
    "5.0" = [Version]"5.0.17"
    "6.0" = [Version]"6.0.28"
    "7.0" = [Version]"7.0.17"
    "8.0" = [Version]"8.0.3"
}

# Detectar .NET Framework
$frameworkPath = "HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full"
if (Test-Path $frameworkPath) {
    $release = (Get-ItemProperty -Path $frameworkPath).Release
    # Tabla de correspondencia release-version: https://learn.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies
    $frameworkVersions = @{
        528040 = "4.8"
        528049 = "4.8.1"
        533320 = "4.8.1"
    }
    $fwVersion = $frameworkVersions.GetEnumerator() | Where-Object { $release -ge $_.Key } | Sort-Object Key -Descending | Select-Object -First 1
    if ($fwVersion) {
        $version = $fwVersion.Value
        Write-Host ".NET Framework detectado: $version (Release: $release)"
        if ([Version]$version -lt $minFrameworkVersion) {
            Write-Host "VULNERABLE: Actualiza a .NET Framework 4.8.1 o superior." -ForegroundColor Red
        } else {
            Write-Host "Seguro: .NET Framework actualizado." -ForegroundColor Green
        }
    } else {
        Write-Host ".NET Framework versión desconocida/release no reconocido ($release)" -ForegroundColor Yellow
    }
} else {
    Write-Host ".NET Framework 4.x no detectado."
}

# Detectar .NET Core/5+/6+/7+/8+
$dotnetExe = "C:\Program Files\dotnet\dotnet.exe"
if (Test-Path $dotnetExe) {
    $sdks = & $dotnetExe --list-sdks
    if ($sdks) {
        Write-Host "`nVersiones de .NET Core/5+/6+/7+/8+ instaladas:"
        foreach ($sdk in $sdks) {
            $ver = $sdk.Split(" ")[0]
            $majorMinor = ($ver -split "\.")[0..1] -join "."
            Write-Host "  - $ver"
            if ($minNetCoreVersions.ContainsKey($majorMinor)) {
                if ([Version]$ver -lt $minNetCoreVersions[$majorMinor]) {
                    Write-Host "    VULNERABLE: Actualiza a al menos $majorMinor.$($minNetCoreVersions[$majorMinor].Build)" -ForegroundColor Red
                } else {
                    Write-Host "    Seguro para $majorMinor.x" -ForegroundColor Green
                }
            } else {
                Write-Host "    Versión no evaluada automáticamente, verifica manualmente." -ForegroundColor Yellow
            }
        }
    } else {
        Write-Host "No se detectaron SDKs de .NET Core/5+/6+/7+/8+."
    }
} else {
    Write-Host "dotnet.exe no encontrado, .NET Core/5+/6+/7+/8+ no instalado."
}

Write-Host "`nRevisa los boletines oficiales de Microsoft para detalles y parches de seguridad:"
Write-Host "https://msrc.microsoft.com/update-guide/" -ForegroundColor Cyan
