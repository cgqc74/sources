# -------------------------------------------------------------------------
# Script para detectar todas las versiones instaladas de .NET en Windows
# (.NET Framework, .NET Core, Runtimes, SDKs) mostrando versión y Release.
# -------------------------------------------------------------------------

Write-Host "================ .NET FRAMEWORK INSTALADO ================"

# .NET Framework 4.x
$fullKey = "HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full"
if (Test-Path $fullKey) {
    $fw = Get-ItemProperty $fullKey
    Write-Host "Framework v4.x  -> Release=$($fw.Release)  Version=$($fw.Version)"
}

# .NET Framework 2.0–3.5
$root = "HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP"
Get-ChildItem $root -Recurse | Where-Object {
    $_.GetValue("Version") -and $_.GetValue("Install") -eq 1
} | Select-Object @{n="Framework";e={$_.PSChildName}},
                     @{n="Version";e={$_.GetValue("Version")}} |
    ForEach-Object { Write-Host "$($_.Framework) -> Version=$($_.Version)" }

Write-Host ""
Write-Host "================ .NET SDK INSTALADO ====================="

# .NET SDKs
if (Get-Command dotnet -ErrorAction SilentlyContinue) {
    & dotnet --list-sdks
} else {
    Write-Host "dotnet CLI no encontrado"
}

Write-Host ""
Write-Host "================ .NET RUNTIMES INSTALADOS ==============="

# .NET runtimes
if (Get-Command dotnet -ErrorAction SilentlyContinue) {
    & dotnet --list-runtimes
} else {
    Write-Host "dotnet CLI no encontrado"
}

Write-Host ""
Write-Host "=========================================================="

