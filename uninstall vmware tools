# Debe ejecutarse como Administrador

function Get-VMwareToolsUninstallString {
    $regPaths = @(
        "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*",
        "HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*"
    )
    foreach ($regPath in $regPaths) {
        $apps = Get-ItemProperty -Path $regPath -ErrorAction SilentlyContinue
        foreach ($app in $apps) {
            if ($app.DisplayName -and $app.DisplayName -like "VMware Tools*") {
                return $app.UninstallString
            }
        }
    }
    return $null
}

# Verifica privilegios de administrador
if (-not ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    Write-Host "Este script debe ejecutarse como administrador." -ForegroundColor Red
    exit 1
}

$uninstallString = Get-VMwareToolsUninstallString

if ($uninstallString) {
    Write-Host "Desinstalando VMware Tools..."

    # Limpia y prepara el comando para desinstalación silenciosa
    if ($uninstallString -match "msiexec\.exe(.+)(\{[A-F0-9\-]+\})") {
        $msiGuid = $Matches[2]
        $cmd = "msiexec.exe /x $msiGuid /qn /norestart"
    } elseif ($uninstallString -match "\.exe") {
        # Si es un ejecutable, agrega switches silenciosos comunes
        $cmd = "$uninstallString /S /qn /norestart"
    } else {
        $cmd = $uninstallString
    }

    Write-Host "Ejecutando: $cmd"
    Start-Process -FilePath "cmd.exe" -ArgumentList "/c $cmd" -Wait

    Write-Host "Comando de desinstalación ejecutado. Reinicia el sistema si es necesario." -ForegroundColor Green
} else {
    Write-Host "VMware Tools no se encuentra instalado en este sistema." -ForegroundColor Yellow
}
