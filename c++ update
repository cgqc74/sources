# Update-VC2019.ps1
# Installs or updates Microsoft Visual C++ 2019 Redistributable (x64 & x86)
# Covers: VC++ 2015, 2017, 2019, and 2022 (same redistributable)
# Author: Qwen
# Source: https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist

# --- Run as Administrator ---
$isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
if (-not $isAdmin) {
    Write-Host "‚ö†Ô∏è  This script requires Administrator privileges." -ForegroundColor Red
    Write-Host "Open PowerShell as Administrator and try again."
    Start-Sleep -Seconds 5
    exit 1
}

# --- Function: Check if VC++ 2019+ is installed ---
function Get-VC2019Version {
    $uninstallKeys = @(
        'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*'
        'HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*'
    )
    $vcEntries = Get-ItemProperty $uninstallKeys -ErrorAction SilentlyContinue | Where-Object {
        $_.DisplayName -like "Microsoft Visual C++ 2019*" -or
        $_.DisplayName -like "Microsoft Visual C++ 2015*" -or
        $_.DisplayName -like "Microsoft Visual C++ 2022*" -or
        ($_.DisplayName -like "Microsoft Visual C++ *" -and $_.DisplayVersion -ge "14.30.0")
    }
    return $vcEntries
}

# --- Function: Download and Install VC++ Redist ---
function Install-VCRuntime {
    param([string]$Url, [string]$Path)
    try {
        Write-Host "‚¨áÔ∏è  Downloading VC++ Redistributable..." -ForegroundColor Green
        Invoke-WebRequest -Uri $Url -OutFile $Path -ErrorAction Stop
        Write-Host "‚úÖ Downloaded: $Path"

        Write-Host "üöÄ Installing... (silent mode)" -ForegroundColor Cyan
        $proc = Start-Process -FilePath $Path -ArgumentList "/install", "/quiet", "/norestart" -Wait -PassThru

        if ($proc.ExitCode -in @(0, 3010)) {
            Write-Host "‚úîÔ∏è  Successfully installed VC++ Runtime" -ForegroundColor Green
        } else {
            Write-Error "‚ùå Installation failed. Exit code: $($proc.ExitCode)"
        }
    } catch {
        Write-Error "‚ùå Error: $($_.Exception.Message)"
    } finally {
        if (Test-Path $Path) { Remove-Item $Path -Force }
    }
}

# --- Main Execution ---
Write-Host "`nüîç Checking installed Visual C++ 2019/2022 Redistributable..." -ForegroundColor Cyan
$installed = Get-VC2019Version

if ($installed) {
    $installed | Select-Object DisplayName, DisplayVersion | Format-Table -AutoSize
} else {
    Write-Host "‚ùå No VC++ 2019+ found." -ForegroundColor Yellow
}

# --- Latest VC++ 2019-2022 Redistributable URL ---
$vcUrl = "https://aka.ms/vs/17/release/vc_redist.x64.exe"  # x64 version
$vcUrl_x86 = "https://aka.ms/vs/17/release/vc_redist.x86.exe"  # x86 (32-bit) if needed
$tempFile = "$env:TEMP\vc_redist.x64.exe"

# --- Ask user to update ---
Write-Host "`nüí° The latest VC++ 2019-2022 runtime ensures compatibility and security." -ForegroundColor Green
Write-Host "üîó Official: https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0"
Write-Host "`nInstall or update VC++ 2019-2022 Redistributable? (y/n)" -ForegroundColor Cyan
$apply = Read-Host

if ($apply -match '^(y|yes|s|si)$') {
    Install-VCRuntime -Url $vcUrl -Path $tempFile

    # Optional: Install x86 version on 64-bit systems (many apps still need it)
    Write-Host "`nInstall x86 (32-bit) version too? (Recommended) (y/n)" -ForegroundColor Cyan
    $installX86 = Read-Host
    if ($installX86 -match '^(y|yes|s|si)$') {
        Install-VCRuntime -Url $vcUrl_x86 -Path "$env:TEMP\vc_redist.x86.exe"
    }
}

Write-Host "`n‚úÖ VC++ update process completed." -ForegroundColor Green
Write-Host "‚û°Ô∏è  No restart required unless prompted by apps." -ForegroundColor Yellow
