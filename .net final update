# =================== CONFIGURACI√ìN =====================
$latestPwshVersion = "7.5.2"
$pwshInstallerUrl = "https://github.com/PowerShell/PowerShell/releases/download/v$latestPwshVersion/PowerShell-$latestPwshVersion-win-x64.msi"
$dotnetUninstallToolUrl = "https://aka.ms/dotnet-core-uninstall-tool-win"
$uninstallToolInstaller = "$env:TEMP\dotnet-uninstall-tool.exe"

$latestSdkUrl = "https://dotnetcli.azureedge.net/dotnet/Sdk/latest.version"
$latestRuntimeUrl = "https://dotnetcli.azureedge.net/dotnet/Runtime/latest.version"

# =============== FUNCIONES ===========================
function Install-DotNetUninstallTool {
    if (-not (Get-Command "dotnet-core-uninstall" -ErrorAction SilentlyContinue)) {
        Write-Host "‚¨áÔ∏è Instalando herramienta oficial para eliminar versiones viejas de .NET..."
        Invoke-WebRequest -Uri $dotnetUninstallToolUrl -OutFile $uninstallToolInstaller
        Start-Process -FilePath $uninstallToolInstaller -ArgumentList "/quiet", "/norestart" -Wait
        Remove-Item $uninstallToolInstaller -Force
    } else {
        Write-Host "‚úÖ Herramienta de desinstalaci√≥n ya instalada."
    }
}

function Get-InstalledDotNet {
    $dotnet = "${env:ProgramFiles}\dotnet\dotnet.exe"
    if (-not (Test-Path $dotnet)) {
        Write-Warning "‚ùå .NET no est√° instalado."
        return @()
    }

    $list = @()
    & $dotnet --list-sdks | ForEach-Object {
        $list += [PSCustomObject]@{ Type = "SDK"; Version = ($_ -split '\s+\[')[0] }
    }
    & $dotnet --list-runtimes | ForEach-Object {
        $list += [PSCustomObject]@{ Type = "Runtime"; Version = ($_ -split '\s+\[')[0] }
    }
    return $list
}

function Get-LatestDotNetVersions {
    $latest = @{}
    try {
        $latest["SDK"]     = [version](Invoke-RestMethod -Uri $latestSdkUrl -UseBasicParsing)
        $latest["Runtime"] = [version](Invoke-RestMethod -Uri $latestRuntimeUrl -UseBasicParsing)
    } catch {
        Write-Warning "‚ö†Ô∏è No se pudo obtener versiones m√°s recientes de .NET."
    }
    return $latest
}

function Uninstall-OldDotNet {
    $installed = Get-InstalledDotNet
    $latest = Get-LatestDotNetVersions

    foreach ($item in $installed) {
        $ver = [version]$item.Version
        if ($item.Type -eq "SDK" -and $ver -lt $latest["SDK"]) {
            Write-Host "üßπ Eliminando SDK $ver"
            dotnet-core-uninstall remove --sdk $ver
        } elseif ($item.Type -eq "Runtime" -and $ver -lt $latest["Runtime"]) {
            Write-Host "üßπ Eliminando Runtime $ver"
            dotnet-core-uninstall remove --runtime $ver
        }
    }
}

function Install-LatestDotNet {
    $latest = Get-LatestDotNetVersions
    foreach ($type in $latest.Keys) {
        $version = $latest[$type].ToString()
        $channel = $version.Split(".")[0]
        $installerPage = "https://dotnet.microsoft.com/en-us/download/dotnet/$channel"
        Write-Host "üåê Abriendo p√°gina oficial para instalar $type v$version"
        Start-Process $installerPage
    }
}

function Get-InstalledPwshVersion {
    $pwshPath = "C:\Program Files\PowerShell\7\pwsh.exe"
    if (Test-Path $pwshPath) {
        return & $pwshPath -Command '$PSVersionTable.PSVersion.ToString()'
    }
    return $null
}

function Update-PowerShell {
    $current = Get-InstalledPwshVersion
    if ($current -and ([version]$current -ge [version]$latestPwshVersion)) {
        Write-Host "‚úÖ PowerShell ya est√° en su √∫ltima versi√≥n ($current)."
        return
    }
    Write-Host "‚¨áÔ∏è Descargando PowerShell $latestPwshVersion..."
    $msiPath = "$env:TEMP\pwsh-$latestPwshVersion.msi"
    Invoke-WebRequest $pwshInstallerUrl -OutFile $msiPath
    Write-Host "‚öôÔ∏è Instalando PowerShell $latestPwshVersion..."
    Start-Process msiexec.exe -ArgumentList "/i", "`"$msiPath`"", "/quiet", "/norestart" -Wait
    Remove-Item $msiPath -Force
    Write-Host "‚úÖ PowerShell actualizado a $latestPwshVersion"
}

# ============= EJECUCI√ìN DEL SCRIPT =====================
Write-Host "`nüß∞ ACTUALIZADOR AUTOM√ÅTICO DE POWERSHELL Y .NET"
Update-PowerShell
Install-DotNetUninstallTool
Uninstall-OldDotNet
Install-LatestDotNet
Write-Host "`n‚úÖ Proceso finalizado. Reinicia el sistema si es necesario."
